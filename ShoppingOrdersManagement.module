<?php

class ShoppingOrdersManagement extends Process {

	public static function getModuleInfo() {
		return array(
			'title' => 'Orders Management',
			'summary' => 'Manage Shop orders',
			'version' => 003,
			'permanent' => false,
			'singular' => true,
			'permission' => 'shop_orders',
			'requires' => array(
								"ShoppingCart",
								"ShoppingCheckout"
								)
		);
	}

	public function init() {
		parent::init();
	}

	public function ___execute() {
		$this->setFuel('processHeadline', 'Manage orders');

		$out  = "<div id='all_orders'>";
		$out .= "<h2>". $this->_("All orders:") ."</h2>";

		$table = $this->modules->get("MarkupAdminDataTable");
		$table->setEncodeEntities(false);
		$table->headerRow(array(
								$this->_('Customer'),
								$this->_('Processed'),
								$this->_('Paid'),
								$this->_('Status'),
								$this->_('Total Sum'),
								$this->_('Time')));

		$orders = $this->pages->find('template=sc-order,limit=20,sort=-created');

		if($orders->count() == 0) {
			$out .= $this->_("No orders yet");
		} else {

			foreach($orders as $order) {
				if ($order->sc_processed == 0) {
					$processed = $this->_('Unprocessed');
				} else {
					$processed = date(wire('config')->dateFormat, $order->sc_processed);
				}

				if ($order->sc_paid == 0) {
					$paid = $this->_('Not paid');
				} else {
					$paid = date(wire('config')->dateFormat, $order->sc_paid);
				}

				 // output in table rows with edit link and delete checkbox?
				 $table->row(array(
					 $order->sc_firstname . " " . $order->sc_lastname => "edit/?id={$order->id}",
					 $processed,
					 $paid,
					 $order->sc_status->title,
					 "<span class='number'>" . $this->modules->get("ShoppingCart")->renderPrice($order->sc_price) . "</span>",
					 date($this->config->dateFormat,$order->created)
				));
			}
			$out .= $table->render();
			$pager = $orders->getTotal() > count($orders) ? $orders->renderPager() : '';
			$out .= $pager;
		}
		$out .= "</div>";
/*
		$out .= "<div id='active_carts'>";
		$out .= "<h2>". $this->_("Active carts:") ."</h2>";

		$table = $this->modules->get("MarkupAdminDataTable");
		$table->setEncodeEntities(false);
		$table->headerRow(array('View', 'Total Sum', 'Time'));

		$result = $this->db->query("SELECT * FROM ShoppingCart WHERE total_sum > 0 ORDER BY last_modified DESC LIMIT 10");

		while($row = $result->fetch_assoc()) {

			 // output in table rows with edit link and delete checkbox?
			 $table->row(array(
				 $this->_("View"),
				 $row['total_sum'] . ' &euro;',
				 $row['last_modified']
			));
		}

		$out .= $table->render();
		$out .= "</div>";
 */


		// Is there clean way to add button to right side?
		return $out;
	}

	public function ___executeEdit() {

		$this->fuel->breadcrumbs->add(new Breadcrumb('../', 'Orders'));
		$id = (int) $this->input->get->id;
		$order = $this->pages->get($id);

		if ($id < 1 || $order->template != 'sc-order') return false;

		$out = '';

		// Save processed date
		if ($this->input->post->processed) {
			$order->sc_processed = time();
			$order->save();
		}

		// Save paid date
		if ($this->input->post->paid) {
			$order->sc_paid = time();
			$order->save();
		}

		// Change status
		if ($this->input->post->status) {
			$status = $this->pages->get("template=admin, name={$this->input->post->status}");
			$order->sc_status = $status;
			$order->save();
			$this->session->redirect("./?id=$id");
		}

		$out .= "<h2><span>{$order->sc_status->title}</span> #{$id}</h2>";

		$out .= "<div class='container-1of3'>";

		$out .= "<div class='customer'><p><b>" .
				$order->sc_firstname . " ".
				$order->sc_lastname ."</b></p><p>".
				$order->sc_streetaddress . "<br />".
				$order->sc_zip . " " . $order->sc_city."<br/>".
				$order->sc_country . "</p>".
				"<p>$order->sc_phone<br />$order->email</p>".
				"</div>";

		$out .= "</div>";

		$co = $this->modules->get('ShoppingCheckout');

		if ($order->sc_custom1 || $order->sc_custom2) {
			$out .= "<div class='container-2of3'>";
			if ($order->sc_custom1) {
				$out .= "<h3>$co->custom1CustomLabel</h3>";
				$out .= "<p>$order->sc_custom1</p>";
			}
			if ($order->sc_custom2) {
				$out .= "<h3>$co->custom2CustomLabel</h3>";
				$out .= "<p>$order->sc_custom2</p>";
			}
			$out .= "</div>";
		}

		$co = $this->modules->get('ShoppingCheckout');
		$out .= "<div class='container-3of3'>";
		if ($order->sc_greetings) {
				$out .= "<h3>" . __('Details about my order', $co) . "</h3>";
				$out .= "<div id='#sc_greetings'>$order->sc_greetings</div>";
		}

		$out .= "</div>"; // order-info-2 ends


		// $table = $this->modules->get("MarkupAdminDataTable");
		$table = $this->renderOrderTable($order);
		$out .= $table->render();

		$out .= "<a class='edit-order' href='"
			. $this->pages->get($this->config->adminRootPageID)->url
			. "page/edit/?id=$order->id'>". $this->_("Edit this order")
			. "</a>";


		if($order->sc_paid == 0) {
			$out .= "<div id='paid_container' class='container-1of2'><h3>"
				. $this->_("Customer hasn't paid this order yet") ."</h3>";
			$out .= "<p class='description'>"
				. $this->_("Payment method: ")
				. "<b>" . $order->sc_paymentmethod
				. "</b><br/>"
				. $this->_("Mark this paid after you have received the payment.")
				. "</p>";

			$form = $this->modules->get('InputfieldForm');
			$form->attr('action', './?id=' . $id);
			$form->attr('method', 'post');

			$field = $this->modules->get('InputfieldSubmit');
			$field->attr('id+name', 'paid');
			$field->attr('value', $this->_('Mark as Paid'));
			$form->append($field);

			$out .= $form->render();
			$out .= "</div>";
		} else {
			$out .= "<div id='paid_container' class='container-1of2'><h3>"
				. $this->_("This order has been paid") ."</h3>";
			$out .= "<p class='description'>"
				. $this->_("Payment method: ") . "<b>"
				. $order->sc_paymentmethod . "</b><br/>"
				. $this->_("Date of payment received: ")
				. date($this->config->dateFormat,$order->sc_paid) . "</p>";
			$out .= "</div>";
		}

		if ($order->sc_processed == 0) {
			$out .= "<div id='processed_container' class='container-2of2'><h3>"
				. $this->_("This order hasn't been processed yet.") ."</h3>";
			$out .= "<p class='description'>"
				. $this->_("Mark this processed after you have delivered the goods.") . "</p>";
			$form = $this->modules->get('InputfieldForm');
			$form->attr('action', './?id=' . $id);
			$form->attr('method', 'post');

			$field = $this->modules->get('InputfieldSubmit');
			$field->attr('id+name', 'processed');
			$field->attr('value', $this->_('Mark as Processed'));
			$form->append($field);

			$out .= $form->render();
			$out .= "</div>";

		} else {
			$out .= "<div id='processed_container' class='container-2of2'><h3>"
				. $this->_("This order has been processed.") ."</h3>";
			$out .= "<p class='description'>"
				. $this->_("This order has been marked processed on: ")
				. date($this->config->dateFormat,$order->sc_processed)
				. "</p>";
			$out .= "</div>";
		}

		$out .= "<div id='status_container' class='block'>";
		$form = $this->modules->get('InputfieldForm');
		$form->attr('action', './?id=' . $id);
		$form->attr('method', 'post');

		$container = new InputfieldWrapper();
		$field = $this->modules->get('InputfieldSelect');
		$statuses = $this->pages->get('template=admin,name=statuses')->children();
		$field->attr('id+name', 'status');
		$field->set('label', $this->_("Change order status?"));
		$field->set('collapsed', 1);
		foreach($statuses as $status) {
			if ($status == $order->sc_status) $selected = array('selected' => 'selected');
			else $selected = array();
			$field->addOption($status->name, $status->title, $selected);
		}
		$container->add($field);


		$field = $this->modules->get('InputfieldSubmit');
		$field->attr('id+name', 'changestatus');
		$field->attr('value', $this->_('Change status'));
		$container->add($field);
		$form->append($container);

		$out .= $form->render();
		$out .= "</div>";

		return $out;
	}


	public function renderOrderTable(Page $order){

		$table = $this->modules->get("MarkupAdminDataTable");
		$table->setEncodeEntities(false);
		$table->setClass('items');
		$table->headerRow(array($this->_('Product'),
								$this->_('Qty'),
								$this->_('Price'),
								$this->_('Total')));

		$items = $order->children();
		$order_total = 0;

		foreach($items as $item) {

			if($item->name == "sc-discount"){ // page name we saved for discount
				if($item->sc_price > 0) {
					$table->row(array(
					   $item->title,
					   "",
					   "",
					   "<span class='number'>âˆ’ " . $this->modules->get("ShoppingCart")->renderPrice($item->sc_price) . "</span>"
					));
				}

			} else {
				if($item->sc_qty > 0 && $item->sc_price > 0){
					$total_price = $item->sc_qty * $item->sc_price;
					$table->row(array(
					   $item->title,
					   $item->sc_qty,
					   "<span class='number'>" . $this->modules->get("ShoppingCart")->renderPrice($item->sc_price) . "</span>",
					   "<span class='number'>" . $this->modules->get("ShoppingCart")->renderPrice($total_price) . "</span>"
					));
				}

			}

		}

		$order_total = $order->sc_price;
		$table->row(array(
			"<b>" . $this->_("Total:") . "</b>",
			"&nbsp;",
			"&nbsp;",
			"<span class='number'><b>" . $this->modules->get("ShoppingCart")->renderPrice($order_total) . "</b></span>"
		));

		return $table;
	}

	public function install() {


		$orders = new Page();
		$orders->template = $this->templates->get("admin");
		$orders->parent = $this->pages->get($this->config->adminRootPageID);
		$orders->title = 'Manage orders';
		$orders->name = 'manage-orders';
		$orders->process = $this;
		$orders->save();

	}

	public function uninstall() {
		$p = $this->pages->get('template=admin, name=manage-orders, include=all');
		if ($p->id) $this->pages->delete($p, true); // Recursive delete
	}


}
